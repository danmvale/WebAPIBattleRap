// <auto-generated />
using System;
using BattleRap.API.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BattleRap.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220917032951_StateFieldsUpdate")]
    partial class StateFieldsUpdate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BattleRap.API.Models.Address", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("AddressLine2")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("CityID")
                        .HasColumnType("int");

                    b.Property<double?>("Latitude")
                        .HasColumnType("double");

                    b.Property<double?>("Longitude")
                        .HasColumnType("double");

                    b.Property<string>("Neighborhood")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("char(9)");

                    b.HasKey("ID");

                    b.HasIndex("CityID");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("BattleRap.API.Models.City", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<int>("StateID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("StateID");

                    b.ToTable("City");
                });

            modelBuilder.Entity("BattleRap.API.Models.Country", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.HasKey("ID");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("BattleRap.API.Models.Organization", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("OrganizationInfoID")
                        .HasColumnType("int");

                    b.Property<int?>("OrganizationSuggestionID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("OrganizationInfoID");

                    b.HasIndex("OrganizationSuggestionID");

                    b.ToTable("Organization");
                });

            modelBuilder.Entity("BattleRap.API.Models.OrganizationInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AddressID")
                        .HasColumnType("int");

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Logo")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("AddressID");

                    b.ToTable("OrganizationInfo");
                });

            modelBuilder.Entity("BattleRap.API.Models.OrganizationSocialMedia", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("OrganizationID")
                        .HasColumnType("int");

                    b.Property<int>("OrganizationInfoID")
                        .HasColumnType("int");

                    b.Property<int>("SocialMediaPlatformID")
                        .HasColumnType("int");

                    b.Property<int>("SocialMediaProfileID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("OrganizationInfoID");

                    b.HasIndex("SocialMediaProfileID");

                    b.ToTable("OrganizationSocialMedia");
                });

            modelBuilder.Entity("BattleRap.API.Models.OrganizationSuggestion", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Approved")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("OrganizationInfoID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("OrganizationInfoID");

                    b.ToTable("OrganizationSuggestion");
                });

            modelBuilder.Entity("BattleRap.API.Models.SocialMediaPlatform", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Logo")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("ID");

                    b.ToTable("SocialMediaPlatform");
                });

            modelBuilder.Entity("BattleRap.API.Models.SocialMediaProfile", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("SocialMediaPlatformID")
                        .HasColumnType("int");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("ID");

                    b.HasIndex("SocialMediaPlatformID");

                    b.ToTable("SocialMediaProfile");
                });

            modelBuilder.Entity("BattleRap.API.Models.State", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("char(2)");

                    b.Property<int>("CountryID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.HasKey("ID");

                    b.HasIndex("CountryID");

                    b.ToTable("State");
                });

            modelBuilder.Entity("BattleRap.API.Models.Address", b =>
                {
                    b.HasOne("BattleRap.API.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("BattleRap.API.Models.City", b =>
                {
                    b.HasOne("BattleRap.API.Models.State", "State")
                        .WithMany()
                        .HasForeignKey("StateID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("State");
                });

            modelBuilder.Entity("BattleRap.API.Models.Organization", b =>
                {
                    b.HasOne("BattleRap.API.Models.OrganizationInfo", "Info")
                        .WithMany()
                        .HasForeignKey("OrganizationInfoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BattleRap.API.Models.OrganizationSuggestion", "OrganizationSuggestion")
                        .WithMany()
                        .HasForeignKey("OrganizationSuggestionID");

                    b.Navigation("Info");

                    b.Navigation("OrganizationSuggestion");
                });

            modelBuilder.Entity("BattleRap.API.Models.OrganizationInfo", b =>
                {
                    b.HasOne("BattleRap.API.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("BattleRap.API.Models.OrganizationSocialMedia", b =>
                {
                    b.HasOne("BattleRap.API.Models.OrganizationInfo", "OrganizationInfo")
                        .WithMany("SocialMedias")
                        .HasForeignKey("OrganizationInfoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BattleRap.API.Models.SocialMediaProfile", "SocialMediaProfile")
                        .WithMany()
                        .HasForeignKey("SocialMediaProfileID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrganizationInfo");

                    b.Navigation("SocialMediaProfile");
                });

            modelBuilder.Entity("BattleRap.API.Models.OrganizationSuggestion", b =>
                {
                    b.HasOne("BattleRap.API.Models.OrganizationInfo", "Info")
                        .WithMany()
                        .HasForeignKey("OrganizationInfoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Info");
                });

            modelBuilder.Entity("BattleRap.API.Models.SocialMediaProfile", b =>
                {
                    b.HasOne("BattleRap.API.Models.SocialMediaPlatform", "Platform")
                        .WithMany("Profiles")
                        .HasForeignKey("SocialMediaPlatformID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Platform");
                });

            modelBuilder.Entity("BattleRap.API.Models.State", b =>
                {
                    b.HasOne("BattleRap.API.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("BattleRap.API.Models.OrganizationInfo", b =>
                {
                    b.Navigation("SocialMedias");
                });

            modelBuilder.Entity("BattleRap.API.Models.SocialMediaPlatform", b =>
                {
                    b.Navigation("Profiles");
                });
#pragma warning restore 612, 618
        }
    }
}
